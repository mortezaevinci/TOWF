function TT=fkine_M26(lengths,q)


%created by M2d .... it is the new M26 Dale version
TT=[
[ sin(q(6))*(sin(q(4))*(sin(q(1))*sin(q(3)) - cos(q(1))*cos(q(2))*cos(q(3))) - cos(q(1))*cos(q(4))*sin(q(2))) - cos(q(6))*(cos(q(5))*(cos(q(4))*(sin(q(1))*sin(q(3)) - cos(q(1))*cos(q(2))*cos(q(3))) + cos(q(1))*sin(q(2))*sin(q(4))) + sin(q(5))*(cos(q(3))*sin(q(1)) + cos(q(1))*cos(q(2))*sin(q(3)))), sin(q(5))*(cos(q(4))*(sin(q(1))*sin(q(3)) - cos(q(1))*cos(q(2))*cos(q(3))) + cos(q(1))*sin(q(2))*sin(q(4))) - cos(q(5))*(cos(q(3))*sin(q(1)) + cos(q(1))*cos(q(2))*sin(q(3))),   cos(q(6))*(sin(q(4))*(sin(q(1))*sin(q(3)) - cos(q(1))*cos(q(2))*cos(q(3))) - cos(q(1))*cos(q(4))*sin(q(2))) + sin(q(6))*(cos(q(5))*(cos(q(4))*(sin(q(1))*sin(q(3)) - cos(q(1))*cos(q(2))*cos(q(3))) + cos(q(1))*sin(q(2))*sin(q(4))) + sin(q(5))*(cos(q(3))*sin(q(1)) + cos(q(1))*cos(q(2))*sin(q(3)))), lengths(1)*cos(q(1)) + (sin(q(4))*(sin(q(1))*sin(q(3)) - cos(q(1))*cos(q(2))*cos(q(3))) - cos(q(1))*cos(q(4))*sin(q(2)))*(lengths(4) + lengths(5)) - lengths(6)*cos(q(6))*(cos(q(5))*(cos(q(4))*(sin(q(1))*sin(q(3)) - cos(q(1))*cos(q(2))*cos(q(3))) + cos(q(1))*sin(q(2))*sin(q(4))) + sin(q(5))*(cos(q(3))*sin(q(1)) + cos(q(1))*cos(q(2))*sin(q(3)))) - cos(q(1))*sin(q(2))*(lengths(2) + lengths(3)) + lengths(6)*sin(q(6))*(sin(q(4))*(sin(q(1))*sin(q(3)) - cos(q(1))*cos(q(2))*cos(q(3))) - cos(q(1))*cos(q(4))*sin(q(2)))]
[ cos(q(6))*(cos(q(5))*(cos(q(4))*(cos(q(1))*sin(q(3)) + cos(q(2))*cos(q(3))*sin(q(1))) - sin(q(1))*sin(q(2))*sin(q(4))) + sin(q(5))*(cos(q(1))*cos(q(3)) - cos(q(2))*sin(q(1))*sin(q(3)))) - sin(q(6))*(sin(q(4))*(cos(q(1))*sin(q(3)) + cos(q(2))*cos(q(3))*sin(q(1))) + cos(q(4))*sin(q(1))*sin(q(2))), cos(q(5))*(cos(q(1))*cos(q(3)) - cos(q(2))*sin(q(1))*sin(q(3))) - sin(q(5))*(cos(q(4))*(cos(q(1))*sin(q(3)) + cos(q(2))*cos(q(3))*sin(q(1))) - sin(q(1))*sin(q(2))*sin(q(4))), - cos(q(6))*(sin(q(4))*(cos(q(1))*sin(q(3)) + cos(q(2))*cos(q(3))*sin(q(1))) + cos(q(4))*sin(q(1))*sin(q(2))) - sin(q(6))*(cos(q(5))*(cos(q(4))*(cos(q(1))*sin(q(3)) + cos(q(2))*cos(q(3))*sin(q(1))) - sin(q(1))*sin(q(2))*sin(q(4))) + sin(q(5))*(cos(q(1))*cos(q(3)) - cos(q(2))*sin(q(1))*sin(q(3)))), lengths(1)*sin(q(1)) - (sin(q(4))*(cos(q(1))*sin(q(3)) + cos(q(2))*cos(q(3))*sin(q(1))) + cos(q(4))*sin(q(1))*sin(q(2)))*(lengths(4) + lengths(5)) + lengths(6)*cos(q(6))*(cos(q(5))*(cos(q(4))*(cos(q(1))*sin(q(3)) + cos(q(2))*cos(q(3))*sin(q(1))) - sin(q(1))*sin(q(2))*sin(q(4))) + sin(q(5))*(cos(q(1))*cos(q(3)) - cos(q(2))*sin(q(1))*sin(q(3)))) - sin(q(1))*sin(q(2))*(lengths(2) + lengths(3)) - lengths(6)*sin(q(6))*(sin(q(4))*(cos(q(1))*sin(q(3)) + cos(q(2))*cos(q(3))*sin(q(1))) + cos(q(4))*sin(q(1))*sin(q(2)))]
[                                                                                                                           cos(q(6))*(cos(q(5))*(cos(q(2))*sin(q(4)) + cos(q(3))*cos(q(4))*sin(q(2))) - sin(q(2))*sin(q(3))*sin(q(5))) + sin(q(6))*(cos(q(2))*cos(q(4)) - cos(q(3))*sin(q(2))*sin(q(4))),                                                                             - sin(q(5))*(cos(q(2))*sin(q(4)) + cos(q(3))*cos(q(4))*sin(q(2))) - cos(q(5))*sin(q(2))*sin(q(3)),                                                                                                                             cos(q(6))*(cos(q(2))*cos(q(4)) - cos(q(3))*sin(q(2))*sin(q(4))) - sin(q(6))*(cos(q(5))*(cos(q(2))*sin(q(4)) + cos(q(3))*cos(q(4))*sin(q(2))) - sin(q(2))*sin(q(3))*sin(q(5))),                                                                                                                                                                                                (lengths(4) + lengths(5))*(cos(q(2))*cos(q(4)) - cos(q(3))*sin(q(2))*sin(q(4))) + cos(q(2))*(lengths(2) + lengths(3)) + lengths(6)*sin(q(6))*(cos(q(2))*cos(q(4)) - cos(q(3))*sin(q(2))*sin(q(4))) + lengths(6)*cos(q(6))*(cos(q(5))*(cos(q(2))*sin(q(4)) + cos(q(3))*cos(q(4))*sin(q(2))) - sin(q(2))*sin(q(3))*sin(q(5)))]

 ];

end